// Generated from ./BasicLexer.g4 by ANTLR 4.4

package antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BasicLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DIV=1, MUL=2, MOD=3, PLUS=4, MINUS=5, GRT=6, GRTEQ=7, SMT=8, SMTEQ=9, 
		EQEQ=10, NOTEQ=11, AND=12, OR=13, NOT=14, LEN=15, ORD=16, CHR=17, WS=18, 
		INT=19, ADDEQ=20, MINEQ=21, CHAR=22, STRING=23, EQ=24, OPEN_PARENTHESES=25, 
		CLOSE_PARENTHESES=26, OPEN_SQUAREB=27, CLOSE_SQUAREB=28, BEGIN=29, END=30, 
		SKIP=31, READ=32, IS=33, FREE=34, RETURN=35, EXIT=36, PRINT=37, PRINTLN=38, 
		IF=39, THEN=40, ELSE=41, FI=42, DO=43, DONE=44, SEMICOLON=45, COMMA=46, 
		NEWPAIR=47, CALL=48, FST=49, SND=50, PAIR=51, WHILE=52, COMMENT=53, BOOL=54, 
		PAIR_LITER=55, TRUE=56, FALSE=57, NEWLINE=58, INT_LITER=59, INTEGER=60, 
		CHAR_LITER=61, STR_LITER=62, IDENT=63;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'"
	};
	public static final String[] ruleNames = {
		"DIV", "MUL", "MOD", "PLUS", "MINUS", "GRT", "GRTEQ", "SMT", "SMTEQ", 
		"EQEQ", "NOTEQ", "AND", "OR", "NOT", "LEN", "ORD", "CHR", "WS", "INT", 
		"ADDEQ", "MINEQ", "CHAR", "STRING", "EOL", "EQ", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", 
		"OPEN_SQUAREB", "CLOSE_SQUAREB", "BEGIN", "END", "SKIP", "READ", "IS", 
		"FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", 
		"DO", "DONE", "SEMICOLON", "COMMA", "NEWPAIR", "CALL", "FST", "SND", "PAIR", 
		"WHILE", "COMMENT", "BOOL", "PAIR_LITER", "TRUE", "FALSE", "NEWLINE", 
		"INT_LITER", "INTEGER", "CHARACTER", "CHAR_LITER", "STR_LITER", "ESCAPED_CHAR", 
		"IDENT", "DIGIT"
	};


	public BasicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BasicLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 59: return INT_LITER_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean INT_LITER_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Long.valueOf(getText()) <= 2147483647 && Long.valueOf(getText()) >= -2147483648;
		}
		return true;
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2A\u01b3\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\3\2\3\2\3\3\3\3\3\4\3\4\3\5"+
		"\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\31\5\31\u00d3\n\31\3\31\3\31\3\32\3\32"+
		"\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3"+
		"$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3-\3"+
		"-\3-\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64"+
		"\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\7\67"+
		"\u0155\n\67\f\67\16\67\u0158\13\67\3\67\3\67\38\38\38\38\38\39\39\39\3"+
		"9\39\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3=\5=\u0174\n=\3=\6=\u0177"+
		"\n=\r=\16=\u0178\3=\3=\3>\6>\u017e\n>\r>\16>\u017f\3?\3?\3@\3@\3@\5@\u0187"+
		"\n@\3@\3@\3A\3A\3A\7A\u018e\nA\fA\16A\u0191\13A\3A\3A\3B\3B\3B\3B\3B\3"+
		"B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\3B\5B\u01a8\nB\3C\3C\3C\7C\u01ad"+
		"\nC\fC\16C\u01b0\13C\3D\3D\2\2E\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\2\63\32\65\33\67\349\35;\36=\37? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/"+
		"_\60a\61c\62e\63g\64i\65k\66m\67o8q9s:u;w<y={>}\2\177?\u0081@\u0083\2"+
		"\u0085A\u0087\2\3\2\b\6\2\13\f\17\17\"\"^^\4\2\f\f\17\17\4\2--//\3\2\62"+
		";\5\2$$\61\61bb\5\2C\\aac|\u01c1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2"+
		"\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2"+
		"E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3"+
		"\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2"+
		"\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2"+
		"k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3"+
		"\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0085\3\2"+
		"\2\2\3\u0089\3\2\2\2\5\u008b\3\2\2\2\7\u008d\3\2\2\2\t\u008f\3\2\2\2\13"+
		"\u0091\3\2\2\2\r\u0093\3\2\2\2\17\u0095\3\2\2\2\21\u0098\3\2\2\2\23\u009a"+
		"\3\2\2\2\25\u009d\3\2\2\2\27\u00a0\3\2\2\2\31\u00a3\3\2\2\2\33\u00a6\3"+
		"\2\2\2\35\u00a9\3\2\2\2\37\u00ab\3\2\2\2!\u00af\3\2\2\2#\u00b3\3\2\2\2"+
		"%\u00b7\3\2\2\2\'\u00bb\3\2\2\2)\u00bf\3\2\2\2+\u00c2\3\2\2\2-\u00c5\3"+
		"\2\2\2/\u00ca\3\2\2\2\61\u00d2\3\2\2\2\63\u00d6\3\2\2\2\65\u00d8\3\2\2"+
		"\2\67\u00da\3\2\2\29\u00dc\3\2\2\2;\u00de\3\2\2\2=\u00e0\3\2\2\2?\u00e6"+
		"\3\2\2\2A\u00ea\3\2\2\2C\u00ef\3\2\2\2E\u00f4\3\2\2\2G\u00f7\3\2\2\2I"+
		"\u00fc\3\2\2\2K\u0103\3\2\2\2M\u0108\3\2\2\2O\u010e\3\2\2\2Q\u0116\3\2"+
		"\2\2S\u0119\3\2\2\2U\u011e\3\2\2\2W\u0123\3\2\2\2Y\u0126\3\2\2\2[\u0129"+
		"\3\2\2\2]\u012e\3\2\2\2_\u0130\3\2\2\2a\u0132\3\2\2\2c\u013a\3\2\2\2e"+
		"\u013f\3\2\2\2g\u0143\3\2\2\2i\u0147\3\2\2\2k\u014c\3\2\2\2m\u0152\3\2"+
		"\2\2o\u015b\3\2\2\2q\u0160\3\2\2\2s\u0165\3\2\2\2u\u016a\3\2\2\2w\u0170"+
		"\3\2\2\2y\u0173\3\2\2\2{\u017d\3\2\2\2}\u0181\3\2\2\2\177\u0183\3\2\2"+
		"\2\u0081\u018a\3\2\2\2\u0083\u01a7\3\2\2\2\u0085\u01a9\3\2\2\2\u0087\u01b1"+
		"\3\2\2\2\u0089\u008a\7\61\2\2\u008a\4\3\2\2\2\u008b\u008c\7,\2\2\u008c"+
		"\6\3\2\2\2\u008d\u008e\7\'\2\2\u008e\b\3\2\2\2\u008f\u0090\7-\2\2\u0090"+
		"\n\3\2\2\2\u0091\u0092\7/\2\2\u0092\f\3\2\2\2\u0093\u0094\7@\2\2\u0094"+
		"\16\3\2\2\2\u0095\u0096\7@\2\2\u0096\u0097\7?\2\2\u0097\20\3\2\2\2\u0098"+
		"\u0099\7>\2\2\u0099\22\3\2\2\2\u009a\u009b\7>\2\2\u009b\u009c\7?\2\2\u009c"+
		"\24\3\2\2\2\u009d\u009e\7?\2\2\u009e\u009f\7?\2\2\u009f\26\3\2\2\2\u00a0"+
		"\u00a1\7#\2\2\u00a1\u00a2\7?\2\2\u00a2\30\3\2\2\2\u00a3\u00a4\7(\2\2\u00a4"+
		"\u00a5\7(\2\2\u00a5\32\3\2\2\2\u00a6\u00a7\7~\2\2\u00a7\u00a8\7~\2\2\u00a8"+
		"\34\3\2\2\2\u00a9\u00aa\7#\2\2\u00aa\36\3\2\2\2\u00ab\u00ac\7n\2\2\u00ac"+
		"\u00ad\7g\2\2\u00ad\u00ae\7p\2\2\u00ae \3\2\2\2\u00af\u00b0\7q\2\2\u00b0"+
		"\u00b1\7t\2\2\u00b1\u00b2\7f\2\2\u00b2\"\3\2\2\2\u00b3\u00b4\7e\2\2\u00b4"+
		"\u00b5\7j\2\2\u00b5\u00b6\7t\2\2\u00b6$\3\2\2\2\u00b7\u00b8\t\2\2\2\u00b8"+
		"\u00b9\3\2\2\2\u00b9\u00ba\b\23\2\2\u00ba&\3\2\2\2\u00bb\u00bc\7k\2\2"+
		"\u00bc\u00bd\7p\2\2\u00bd\u00be\7v\2\2\u00be(\3\2\2\2\u00bf\u00c0\7-\2"+
		"\2\u00c0\u00c1\7?\2\2\u00c1*\3\2\2\2\u00c2\u00c3\7/\2\2\u00c3\u00c4\7"+
		"?\2\2\u00c4,\3\2\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7\7j\2\2\u00c7\u00c8"+
		"\7c\2\2\u00c8\u00c9\7t\2\2\u00c9.\3\2\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc"+
		"\7v\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7k\2\2\u00ce\u00cf\7p\2\2\u00cf"+
		"\u00d0\7i\2\2\u00d0\60\3\2\2\2\u00d1\u00d3\7\17\2\2\u00d2\u00d1\3\2\2"+
		"\2\u00d2\u00d3\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d5\7\f\2\2\u00d5\62"+
		"\3\2\2\2\u00d6\u00d7\7?\2\2\u00d7\64\3\2\2\2\u00d8\u00d9\7*\2\2\u00d9"+
		"\66\3\2\2\2\u00da\u00db\7+\2\2\u00db8\3\2\2\2\u00dc\u00dd\7]\2\2\u00dd"+
		":\3\2\2\2\u00de\u00df\7_\2\2\u00df<\3\2\2\2\u00e0\u00e1\7d\2\2\u00e1\u00e2"+
		"\7g\2\2\u00e2\u00e3\7i\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7p\2\2\u00e5"+
		">\3\2\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8\7p\2\2\u00e8\u00e9\7f\2\2\u00e9"+
		"@\3\2\2\2\u00ea\u00eb\7u\2\2\u00eb\u00ec\7m\2\2\u00ec\u00ed\7k\2\2\u00ed"+
		"\u00ee\7r\2\2\u00eeB\3\2\2\2\u00ef\u00f0\7t\2\2\u00f0\u00f1\7g\2\2\u00f1"+
		"\u00f2\7c\2\2\u00f2\u00f3\7f\2\2\u00f3D\3\2\2\2\u00f4\u00f5\7k\2\2\u00f5"+
		"\u00f6\7u\2\2\u00f6F\3\2\2\2\u00f7\u00f8\7h\2\2\u00f8\u00f9\7t\2\2\u00f9"+
		"\u00fa\7g\2\2\u00fa\u00fb\7g\2\2\u00fbH\3\2\2\2\u00fc\u00fd\7t\2\2\u00fd"+
		"\u00fe\7g\2\2\u00fe\u00ff\7v\2\2\u00ff\u0100\7w\2\2\u0100\u0101\7t\2\2"+
		"\u0101\u0102\7p\2\2\u0102J\3\2\2\2\u0103\u0104\7g\2\2\u0104\u0105\7z\2"+
		"\2\u0105\u0106\7k\2\2\u0106\u0107\7v\2\2\u0107L\3\2\2\2\u0108\u0109\7"+
		"r\2\2\u0109\u010a\7t\2\2\u010a\u010b\7k\2\2\u010b\u010c\7p\2\2\u010c\u010d"+
		"\7v\2\2\u010dN\3\2\2\2\u010e\u010f\7r\2\2\u010f\u0110\7t\2\2\u0110\u0111"+
		"\7k\2\2\u0111\u0112\7p\2\2\u0112\u0113\7v\2\2\u0113\u0114\7n\2\2\u0114"+
		"\u0115\7p\2\2\u0115P\3\2\2\2\u0116\u0117\7k\2\2\u0117\u0118\7h\2\2\u0118"+
		"R\3\2\2\2\u0119\u011a\7v\2\2\u011a\u011b\7j\2\2\u011b\u011c\7g\2\2\u011c"+
		"\u011d\7p\2\2\u011dT\3\2\2\2\u011e\u011f\7g\2\2\u011f\u0120\7n\2\2\u0120"+
		"\u0121\7u\2\2\u0121\u0122\7g\2\2\u0122V\3\2\2\2\u0123\u0124\7h\2\2\u0124"+
		"\u0125\7k\2\2\u0125X\3\2\2\2\u0126\u0127\7f\2\2\u0127\u0128\7q\2\2\u0128"+
		"Z\3\2\2\2\u0129\u012a\7f\2\2\u012a\u012b\7q\2\2\u012b\u012c\7p\2\2\u012c"+
		"\u012d\7g\2\2\u012d\\\3\2\2\2\u012e\u012f\7=\2\2\u012f^\3\2\2\2\u0130"+
		"\u0131\7.\2\2\u0131`\3\2\2\2\u0132\u0133\7p\2\2\u0133\u0134\7g\2\2\u0134"+
		"\u0135\7y\2\2\u0135\u0136\7r\2\2\u0136\u0137\7c\2\2\u0137\u0138\7k\2\2"+
		"\u0138\u0139\7t\2\2\u0139b\3\2\2\2\u013a\u013b\7e\2\2\u013b\u013c\7c\2"+
		"\2\u013c\u013d\7n\2\2\u013d\u013e\7n\2\2\u013ed\3\2\2\2\u013f\u0140\7"+
		"h\2\2\u0140\u0141\7u\2\2\u0141\u0142\7v\2\2\u0142f\3\2\2\2\u0143\u0144"+
		"\7u\2\2\u0144\u0145\7p\2\2\u0145\u0146\7f\2\2\u0146h\3\2\2\2\u0147\u0148"+
		"\7r\2\2\u0148\u0149\7c\2\2\u0149\u014a\7k\2\2\u014a\u014b\7t\2\2\u014b"+
		"j\3\2\2\2\u014c\u014d\7y\2\2\u014d\u014e\7j\2\2\u014e\u014f\7k\2\2\u014f"+
		"\u0150\7n\2\2\u0150\u0151\7g\2\2\u0151l\3\2\2\2\u0152\u0156\7%\2\2\u0153"+
		"\u0155\n\3\2\2\u0154\u0153\3\2\2\2\u0155\u0158\3\2\2\2\u0156\u0154\3\2"+
		"\2\2\u0156\u0157\3\2\2\2\u0157\u0159\3\2\2\2\u0158\u0156\3\2\2\2\u0159"+
		"\u015a\b\67\2\2\u015an\3\2\2\2\u015b\u015c\7d\2\2\u015c\u015d\7q\2\2\u015d"+
		"\u015e\7q\2\2\u015e\u015f\7n\2\2\u015fp\3\2\2\2\u0160\u0161\7p\2\2\u0161"+
		"\u0162\7w\2\2\u0162\u0163\7n\2\2\u0163\u0164\7n\2\2\u0164r\3\2\2\2\u0165"+
		"\u0166\7v\2\2\u0166\u0167\7t\2\2\u0167\u0168\7w\2\2\u0168\u0169\7g\2\2"+
		"\u0169t\3\2\2\2\u016a\u016b\7h\2\2\u016b\u016c\7c\2\2\u016c\u016d\7n\2"+
		"\2\u016d\u016e\7u\2\2\u016e\u016f\7g\2\2\u016fv\3\2\2\2\u0170\u0171\7"+
		"\f\2\2\u0171x\3\2\2\2\u0172\u0174\t\4\2\2\u0173\u0172\3\2\2\2\u0173\u0174"+
		"\3\2\2\2\u0174\u0176\3\2\2\2\u0175\u0177\t\5\2\2\u0176\u0175\3\2\2\2\u0177"+
		"\u0178\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017a\3\2"+
		"\2\2\u017a\u017b\6=\2\2\u017bz\3\2\2\2\u017c\u017e\5\u0087D\2\u017d\u017c"+
		"\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180"+
		"|\3\2\2\2\u0181\u0182\n\6\2\2\u0182~\3\2\2\2\u0183\u0186\7)\2\2\u0184"+
		"\u0187\5}?\2\u0185\u0187\5\u0083B\2\u0186\u0184\3\2\2\2\u0186\u0185\3"+
		"\2\2\2\u0187\u0188\3\2\2\2\u0188\u0189\7)\2\2\u0189\u0080\3\2\2\2\u018a"+
		"\u018f\7$\2\2\u018b\u018e\5}?\2\u018c\u018e\5\u0083B\2\u018d\u018b\3\2"+
		"\2\2\u018d\u018c\3\2\2\2\u018e\u0191\3\2\2\2\u018f\u018d\3\2\2\2\u018f"+
		"\u0190\3\2\2\2\u0190\u0192\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0193\7$"+
		"\2\2\u0193\u0082\3\2\2\2\u0194\u0195\7^\2\2\u0195\u01a8\7\62\2\2\u0196"+
		"\u0197\7^\2\2\u0197\u01a8\7d\2\2\u0198\u0199\7^\2\2\u0199\u01a8\7v\2\2"+
		"\u019a\u019b\7^\2\2\u019b\u01a8\7p\2\2\u019c\u019d\7^\2\2\u019d\u01a8"+
		"\7h\2\2\u019e\u019f\7^\2\2\u019f\u01a8\7t\2\2\u01a0\u01a8\7^\2\2\u01a1"+
		"\u01a2\7^\2\2\u01a2\u01a8\7^\2\2\u01a3\u01a4\7^\2\2\u01a4\u01a8\7$\2\2"+
		"\u01a5\u01a6\7^\2\2\u01a6\u01a8\7)\2\2\u01a7\u0194\3\2\2\2\u01a7\u0196"+
		"\3\2\2\2\u01a7\u0198\3\2\2\2\u01a7\u019a\3\2\2\2\u01a7\u019c\3\2\2\2\u01a7"+
		"\u019e\3\2\2\2\u01a7\u01a0\3\2\2\2\u01a7\u01a1\3\2\2\2\u01a7\u01a3\3\2"+
		"\2\2\u01a7\u01a5\3\2\2\2\u01a8\u0084\3\2\2\2\u01a9\u01ae\t\7\2\2\u01aa"+
		"\u01ad\t\7\2\2\u01ab\u01ad\5\u0087D\2\u01ac\u01aa\3\2\2\2\u01ac\u01ab"+
		"\3\2\2\2\u01ad\u01b0\3\2\2\2\u01ae\u01ac\3\2\2\2\u01ae\u01af\3\2\2\2\u01af"+
		"\u0086\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b1\u01b2\4\62;\2\u01b2\u0088\3\2"+
		"\2\2\16\2\u00d2\u0156\u0173\u0178\u017f\u0186\u018d\u018f\u01a7\u01ac"+
		"\u01ae\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}